@model Cryptofolio.Models.Portfolio
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Portfolio: " + Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var prices = ViewData["prices"] as List<MarketPrice>;
    var dayOldPrices = ViewData["dayoldprices"] as List<MarketPrice>;
    var dailyChange = (Double)ViewData["dailychange"];
    var percentChange = (Double)ViewData["percentchange"];
    var totalPurchased = (Double)ViewData["totalpurchased"];
    var totalChange = (Double)ViewData["totalchange"];
    var totalUSD = (Double)ViewData["totalusd"];
    var totalBTC = (Double)ViewData["totalbtc"];
    var comments = ViewData["comments"] as List<Comment>;
}
<div class="row">
    <div class="col-md-12">
        <li class="card">
            <div class="card-header text-center">
                <h3>@Html.DisplayFor(model => model.Name)</h3>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-md-4">
                        <p class="card-text">
                            Created by
                            <h4>@Html.DisplayFor(model => model.OwnerID)</h4>
                        </p>
                    </div>
                    <div class="col-md-4">
                        <p class="card-text">
                            Rating<br />
                            <span class="specialbadge">
                                @if (Model.Rating > 0 && Model.Rating < 25)
                                {
                                    <span class="badge badge-sm badge-danger">@Model.Rating</span>
                                }
                                else if (Model.Rating >= 25 && Model.Rating < 50)
                                {
                                    <span class="badge badge-sm badge-warning">@Model.Rating</span>
                                }
                                else if (Model.Rating == 50)
                                {
                                    <span class="badge badge-sm badge-secondary">@Model.Rating</span>
                                }
                                else if (Model.Rating > 50 && Model.Rating <= 75)
                                {
                                    <span class="badge badge-sm badge-info">@Model.Rating</span>
                                }
                                else if (Model.Rating > 75 && Model.Rating <= 100)
                                {
                                    <span class="badge badge-sm badge-success">@Model.Rating</span>

                                }
                                else
                                {
                                    <span class="badge badge-sm badge-primary">Magic</span>
                                }
                            </span>
                            <br />
                            @if ((User.IsInRole("Admin")) || ((User.IsInRole("User")) && (!(@UserManager.GetUserName(User) == Model.OwnerID))))
                            {
                                <a asp-action="Up" asp-route-id="@Model.ID" class="badge badge-sm badge-success"><i class="fa fa-thumbs-up" aria-hidden="true"></i></a>
                                <a asp-action="Up" asp-route-id="@Model.ID" class="badge badge-sm badge-danger"><i class="fa fa-thumbs-down" aria-hidden="true"></i></a>
                            }
                            else if (@UserManager.GetUserName(User) != Model.OwnerID && !(User.IsInRole("User")))
                            {
                                <span class="small-msg">Sign in to rate</span>
                            }
                        </p>
                    </div>
                    <div class="col-md-4">
                        <p class="card-text">
                            Created on
                            <h4>@Html.DisplayFor(model => model.Creation_Date)</h4>
                        </p>
                    </div>
                    <div class="col-md-4">
                        <p class="card-text">
                            Total BTC Value
                            <h4>@totalBTC.ToString("0.00000") BTC</h4>
                        </p>
                    </div>
                    <div class="col-md-4">
                        <p class="card-text">
                            Total USD Value
                            <h4>$@totalUSD.ToString("0.00")</h4>
                        </p>
                    </div>
                    <div class="col-md-4">
                        <p class="card-text">
                            Total Purchase Price
                            <h4>
                                $@totalPurchased.ToString("0.00") USD
                            </h4>
                        </p>
                    </div>
                    <div class="col-md-4">
                        <p class="card-text">
                            Overall % Change
                            @if (percentChange > 0)
                            {
                                <h4 class="text-success">
                                    +@percentChange.ToString("0.00")%
                                </h4>
                            }
                            else
                            {
                                <h4 class="text-danger">
                                    @if (Double.IsNaN(percentChange))
                                    {
                                        <span>
                                            0.00%
                                        </span>
                                    }
                                    else
                                    {
                                        <span>
                                            @percentChange.ToString("0.00")%
                                        </span>
                                    }

                                </h4>
                            }
                    </div>
                    <div class="col-md-4">
                        <p class="card-text">
                            Overall USD Change
                            @if (totalChange > 0)
                            {
                                <h4 class="text-success">
                                    @totalChange.ToString("0.00") USD
                                </h4>
                            }
                            else
                            {
                                <h4 class="text-danger">
                                    @totalChange.ToString("0.00") USD
                                </h4>
                            }
                        </p>
                    </div>
                    <div class="col-md-4">
                        <p class="card-text">
                            24 Hour Change
                            @if (dailyChange > 0)
                            {
                                <h4 class="text-success">
                                    +@dailyChange.ToString("0.00")%
                                </h4>
                            }
                            else
                            {
                                <h4 class="text-danger">
                                    @if (Double.IsNaN(dailyChange))
                                    {
                                        <span>
                                            0.00%
                                        </span>
                                    }
                                    else
                                    {
                                        <span>
                                            @dailyChange.ToString("0.00")%
                                        </span>
                                    }

                                </h4>
                            }
                        </p>
                    </div>
                </div>
            </div>

            <div class="card-body text-center">
                <div class="row ">
                    <div class="col-lg-10 chart-col">
                        <div class="card">
                            <div class="card-body">
                                <div id="chart" class="chart-left" style="position:relative;">
                                    <canvas id="datachart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="row">
                            <div class="col-lg-2">
                            </div>
                            <div class="col-lg-8">
                                <div class="card ">
                                    <div class="card-body chart-row">
                                        <div class=" text-center chart-col-area chart-col">
                                            <h5>Data Type</h5>
                                            <a id="btnusd" class="btn btn-sm btn-success chart-col-btn" onclick="setDataType(1)" href="#">USD</a>
                                            <a id="btnbtc" class="btn btn-sm btn-secondary chart-col-btn" onclick="setDataType(2)" href="#">BTC</a>
                                            <a id="btnpercent" class="btn btn-sm btn-secondary chart-col-btn" onclick="setDataType(3)" href="#">%</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="card ">
                                    <div class="card-body chart-row">
                                        <div class=" text-center chart-col-area chart-col">
                                            <h5>Date Range</h5>
                                            <a id="btn3" class="btn btn-sm btn-success chart-col-btn" onclick="setDateRange(3)" href="#">3D</a>
                                            <a id="btn7" class="btn btn-sm btn-secondary chart-col-btn" onclick="setDateRange(7)" href="#">7D</a>
                                            <a id="btn14" class="btn btn-sm btn-secondary chart-col-btn" onclick="setDateRange(14)" href="#">14D</a>
                                            <a id="btn30" class="btn btn-sm btn-secondary chart-col-btn" onclick="setDateRange(30)" href="#">30D</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <input id="daterange" value="30" hidden />
                                <input id="dataselected" value="1" hidden />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer text-center">
                <h4>Holdings <span class="badge badge-pill badge-secondary"</span>@Model.Holdings.Count</h4>
            </div>
            <ul class="list-group list-group-flush">
                @if (Model.Holdings.Count > 0)
                {
                    <li class="list-group-item">

                        <table id="holdings" class="table table-striped table-bordered no-margin" style="width:100%">
                            <thead>
                                <tr>
                                    <th>Asset Type</th>
                                    <th>24 Hour Change</th>
                                    <th>Amount</th>
                                    <th>Current Price</th>
                                    <th>Purchase Price</th>
                                    <th>Overall Change</th>
                                    @if ((@UserManager.GetUserName(User) == Model.OwnerID) || (User.IsInRole("Admin")))
                                    {
                                        <th>Options</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Holdings)
                                {
                                    var dailychange = 0.00;
                                    MarketPrice priceContext = new MarketPrice();

                                    @foreach (var p in prices)
                                    {
                                        if (@item.AssetType == p.MarketCurrency)
                                        {
                                            priceContext = p;
                                        }
                                    }

                                    @foreach (var d in dayOldPrices)
                                    {
                                        if (priceContext.MarketCurrency == d.MarketCurrency)
                                        {
                                            dailychange = (priceContext.CurrentPrice - d.CurrentPrice) / priceContext.CurrentPrice * 100;
                                        }
                                    }

                                    var overall = (priceContext.CurrentPrice - item.PurchasePrice) / item.PurchasePrice * 100;

                                    <tr>
                                        <td>@item.AssetType</td>
                                        <td>
                                            @if (dailychange > 0)
                                            {
                                                <span class="text-success">+@dailychange.ToString("0.00")%</span>
                                            }
                                            else
                                            {
                                                <span class="text-danger">@dailychange.ToString("0.00")%</span>
                                            }
                                        </td>
                                        <td>@item.Amount</td>
                                        <td>$@priceContext.CurrentPrice.ToString("0.00")</td>
                                        <td>$@item.PurchasePrice.ToString("0.00")</td>
                                        <td>
                                            @if (overall > 0)
                                            {
                                                <span class="text-success">+@overall.ToString("0.00")%</span>
                                            }
                                            else
                                            {
                                                <span class="text-danger">@overall.ToString("0.00")%</span>
                                            }
                                        </td>

                                        @if ((@UserManager.GetUserName(User) == Model.OwnerID) || (User.IsInRole("Admin")))
                                        {
                                            <td class="text-center">
                                                <a asp-action="EditHolding" asp-route-id="@item.ID" class="btn btn-sm btn-primary card-link holding-btn">Edit</a>
                                                <a asp-action="DeleteHolding" asp-route-id="@item.ID" class="btn btn-sm btn-danger card-link holding-btn">Delete</a>
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </li>
                }
                else
                {
                    <li class="list-group-item">
                        <div class="text-center spaced-out">
                            This portfolio doesn't have any holdings yet
                            @if ((@UserManager.GetUserName(User) == Model.OwnerID) || (User.IsInRole("Admin")))
                            {
                                <span>, </span><a asp-action="AddHolding" class="card-link" asp-route-id="@Model.ID">click here</a><span> to add one</span>
                            }
                        </div>
                    </li>
                }
                @if ((@UserManager.GetUserName(User) == Model.OwnerID) || (User.IsInRole("Admin")))
                {

                    <li class="list-group-item">
                        <div class="row">
                            <div class="col-md-3">

                                <a asp-action="AddHolding" class="card-link" asp-route-id="@Model.ID">Add an asset holding</a>

                            </div>
                        </div>
                    </li>
                }

                <li class="list-group-item">
                    @if ((@UserManager.GetUserName(User) == Model.OwnerID) || (User.IsInRole("Admin")))
                    {
                        <a asp-action="Index" class="card-link">Back to portfolio list</a>
                        <a asp-action="Edit" asp-route-id="@Model.ID" class="card-link">Edit details</a>
                        <a asp-action="Delete" asp-route-id="@Model.ID" class="card-link">Delete this portfolio</a>
                    }
                    else
                    {
                        <a asp-action="Portfolios" class="card-link">Back to portfolio list</a>
                    }
                </li>
                <div class="card-footer text-center">
                    <h4>Comments <span class="badge badge-pill badge-secondary"</span>@comments.Count</h4>
                </div>

                <li class="list-group-item">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <partial name="_AddCommentPartial" model='new Comment { OwnerID = UserManager.GetUserName(User), Portfolio_ID = Model.ID, }' />

                    }
                    else
                    {
                        <div class="text-center spaced-out">
                            Sign in to leave a comment
                        </div>
                    }
                </li>
                @foreach (var c in comments)
                {
                    <li class="list-group-item">
                        <div class="card">
                            <div class="card-body" id="view_@c.ID">
                                <h4>"@c.Message"</h4>
                                <h6>@c.Creation_Date by <span class="badge badge-info badge-user">@c.OwnerID</span></h6>
                            </div>
                            <div class="card-body" id="edit_@c.ID" style="display:none">
                                <partial name="_EditCommentPartial" model='c' />
                            </div>
                            <div class="card-body" id="delete_@c.ID" style="display:none">
                                <partial name="_DeleteCommentPartial" model='c' />
                            </div>
                            @if ((@UserManager.GetUserName(User) == c.OwnerID) || (User.IsInRole("Admin")))
                            {
                                <div class="card-footer">
                                    <button onclick="canceledit(@c.ID)" style="display:none" id="cancel_@c.ID" class="btn btn-sm btn-primary">Cancel</button>
                                    <button onclick="editcomment(@c.ID)" id="editbtn_@c.ID" class="btn btn-sm btn-primary card-link">Edit</button>
                                    <button onclick="deletecomment(@c.ID)" id="delete_@c.ID" class="btn btn-sm btn-danger card-link">Delete</button>
                                </div>
                            }
                        </div>
                    </li>
                    <li id="edit_@c.ID" class="list-group-item">
                    </li>

                }
            </ul>

    </div>
</div>


@section scripts
    {
    <script>
        $(document).ready(function () {
            updateChart(30, 1);
            $('#holdings').DataTable({
                "paging": true
            });
        });

    function editcomment(value) {
        $('#view_' + value).hide();
        $('#editbtn_' + value).hide();
        $('#delete_' + value).hide();
        $('#edit_' + value).show();
        $('#cancel_' + value).show();
    }

    function canceledit(value) {
        $('#edit_' + value).hide();
        $('#delete_' + value).hide();
        $('#cancel_' + value).hide();
        $('#view_' + value).show();
        $('#editbtn_' + value).show();
    }

    function deletecomment(value) {
        $('#view_' + value).hide();
        $('#editbtn_' + value).hide();
        $('#edit_' + value).hide();
        $('#cancel_' + value).show();
        $('#delete_' + value).show();
    }

    function setDateRange(value) {
        $('#daterange').val(value);
        var dataSelected = $('#dataselected').val();
        updateChart(value, dataSelected);

        if (value == 3) {
            $('#btn3').removeClass("btn-secondary").addClass("btn-success");
            $('#btn7').removeClass("btn-success").addClass("btn-secondary");
            $('#btn14').removeClass("btn-success").addClass("btn-secondary");
            $('#btn30').removeClass("btn-success").addClass("btn-secondary");
        } else if (value == 7) {
            $('#btn3').removeClass("btn-success").addClass("btn-secondary");
            $('#btn7').removeClass("btn-secondary").addClass("btn-success");
            $('#btn14').removeClass("btn-success").addClass("btn-secondary");
            $('#btn30').removeClass("btn-success").addClass("btn-secondary");
        } else if (value == 14) {
            $('#btn3').removeClass("btn-success").addClass("btn-secondary");
            $('#btn7').removeClass("btn-success").addClass("btn-secondary");
            $('#btn14').removeClass("btn-secondary").addClass("btn-success");
            $('#btn30').removeClass("btn-success").addClass("btn-secondary");
        }
        else if (value == 30) {
            $('#btn3').removeClass("btn-success").addClass("btn-secondary");
            $('#btn7').removeClass("btn-success").addClass("btn-secondary");
            $('#btn14').removeClass("btn-success").addClass("btn-secondary");
            $('#btn30').removeClass("btn-secondary").addClass("btn-success");
        }
    }

    function setDataType(value) {
        $('#dataselected').val(value);
        var dateRange = $('#daterange').val();
        updateChart(dateRange, value);

        if (value == 1) {
            $('#btnpercent').removeClass("btn-success").addClass("btn-secondary");
            $('#btnbtc').removeClass("btn-success").addClass("btn-secondary");
            $('#btnusd').removeClass("btn-secondary").addClass("btn-success");
        } else if (value == 2) {
            $('#btnusd').removeClass("btn-success").addClass("btn-secondary");
            $('#btcpercent').removeClass("btn-success").addClass("btn-secondary");
            $('#btnbtc').removeClass("btn-secondary").addClass("btn-success");
        } else if (value == 3) {
            $('#btnusd').removeClass("btn-success").addClass("btn-secondary");
            $('#btnbtc').removeClass("btn-success").addClass("btn-secondary");
            $('#btnpercent').removeClass("btn-secondary").addClass("btn-success");
        }
    }

    function updateChart(dateRangeSelected, dataSelected) {

        if (dataSelected == 1) {
            var dataArray = @Html.Raw(Json.Serialize(ViewBag.chartRatesUSD));
        } else if(dataSelected == 2){
            var dataArray = @Html.Raw(Json.Serialize(ViewBag.chartRatesBTC));
        } else if (dataSelected == 3) {
             var dataArray = @Html.Raw(Json.Serialize(ViewBag.chartRatesPercent));
        }
        var dateArray = @Html.Raw(Json.Serialize(ViewBag.chartDates));
        var data = [];
        var dates = [];
        for (var i = 0; i < dateRangeSelected; i++) {
           data.push(parseFloat(dataArray[i]).toFixed(2));
        }


        for (var i = 0; i < dateRangeSelected; i++) {
           dates.push(dateArray[i]);
        }

        $('#chart').empty();
        $('#chart').html('<canvas id="datachart"></canvas>');

        var ctx = document.getElementById("datachart").getContext('2d');
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: 'Market',
                    data: data,
                    borderColor: [
                        'rgba(255,15,22,1)'
                    ],
                    backgroundColor: [
                        'rgba(255,15,22,0.2)'
                    ],
                    borderWidth: 1
                }]
            },
            responsive: true,

            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                }
            }
        });
    }
    </script>
}