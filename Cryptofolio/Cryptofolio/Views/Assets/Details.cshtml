@model Cryptofolio.Models.Asset
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Asset: " + Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var prices = ViewData["prices"] as List<MarketPrice>;
}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header text-center">
                <h3>@Html.DisplayFor(model => model.Name)</h3>
            </div>
            <div class="card-body">
                <div class="row text-center">
                    <div class="col-md-6">
                        <p class="card-text">
                            USD Value
                            <h2>$@Model.Current_Price.ToString("0.00")</h2>
                        </p>
                    </div>
                    <div class="col-md-6">
                        <p class="card-text">
                            24 Hour Change
                            @if (Model.Daily_Change > 0)
                            {
                                <h2 class="text-success">
                                    +@Model.Daily_Change.ToString("0.00")%
                                </h2>
                            }
                            else
                            {
                                <h4 class="text-danger">
                                    @if (Double.IsNaN(Model.Daily_Change))
                                    {
                                        <span>
                                            0.00%
                                        </span>
                                    }
                                    else
                                    {
                                        <span>
                                            @Model.Daily_Change.ToString("0.00")%
                                        </span>
                                    }

                                </h4>
                            }
                        </p>
                    </div>
                </div>
            </div>
            <div class="card-body text-center">
                <div class="row ">
                    <div class="col-lg-10 chart-col">
                        <div class="card">
                            <div class="card-body">
                                <div id="chart" class="chart-left" style="position:relative;">
                                    <canvas id="datachart"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="row">
                            <div class="col-lg-2">
                            </div>
                            <div class="col-lg-8">
                                <div class="card ">
                                    <div class="card-body chart-row">
                                        <div class=" text-center chart-col-area chart-col">
                                            <h5>Date Range</h5>
                                            <a id="btn3" class="btn btn-sm btn-success chart-col-btn" onclick="setDateRange(3)" href="#">3D</a>
                                            <a id="btn7" class="btn btn-sm btn-secondary chart-col-btn" onclick="setDateRange(7)" href="#">7D</a>
                                            <a id="btn14" class="btn btn-sm btn-secondary chart-col-btn" onclick="setDateRange(14)" href="#">14D</a>
                                            <a id="btn30" class="btn btn-sm btn-secondary chart-col-btn" onclick="setDateRange(30)" href="#">30D</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <input id="daterange" value="30" hidden />
                                <input id="dataselected" value="1" hidden />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer text-center">
                <h4>Prices <span class="badge badge-pill badge-secondary"</span>@prices.Count()</h4>
            </div>
            <div class="card-footer">
                @if (User.IsInRole("Admin"))
                {

                    @if (Model.Activated == true)
                    {
                        <a asp-action="ToggleActive" asp-route-id="@Model.ID" class="btn btn-sm btn-danger card-link">Disable</a>
                    }
                    else
                    {
                        <a asp-action="ToggleActive" asp-route-id="@Model.ID" class="btn btn-sm btn-success card-link">Enable</a>
                    }
                }
                <a asp-action="Index" class="card-link">Back to asset list</a>
            </div>
            <div class="list-group-item">
                <table id="prices" class="table table-striped table-bordered no-margin" style="width:100%">
                    <thead>
                        <tr>
                            <th>Asset Code</th>
                            <th>Asset Name</th>
                            <th>Price Date</th>
                            <th>Current Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in prices)
                        {
                            <tr>
                                <td>@item.MarketCurrency</td>
                                <td>@item.MarketCurrencyLong</td>
                                <td>@item.TimeStamp</td>
                                <td>@item.CurrentPrice</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>



@section scripts
    {

<script>
        $(document).ready(function () {
            // Load the chart initially with 30 days and set to USD
            updateChart(30, 1);
            // Pagination for the datatable
            $('#prices').DataTable({
                "paging": true
            });
        });
    // Accept the users selection for a modify the data displayed by the chart
    function setDateRange(value) {
        $('#daterange').val(value);
        var dataSelected = $('#dataselected').val();
        // Sets the new chart with the data chosen
        updateChart(value, dataSelected);

        if (value == 3) {
            $('#btn3').removeClass("btn-secondary").addClass("btn-success");
            $('#btn7').removeClass("btn-success").addClass("btn-secondary");
            $('#btn14').removeClass("btn-success").addClass("btn-secondary");
            $('#btn30').removeClass("btn-success").addClass("btn-secondary");
        } else if (value == 7) {
            $('#btn3').removeClass("btn-success").addClass("btn-secondary");
            $('#btn7').removeClass("btn-secondary").addClass("btn-success");
            $('#btn14').removeClass("btn-success").addClass("btn-secondary");
            $('#btn30').removeClass("btn-success").addClass("btn-secondary");
        } else if (value == 14) {
            $('#btn3').removeClass("btn-success").addClass("btn-secondary");
            $('#btn7').removeClass("btn-success").addClass("btn-secondary");
            $('#btn14').removeClass("btn-secondary").addClass("btn-success");
            $('#btn30').removeClass("btn-success").addClass("btn-secondary");
        }
        else if (value == 30) {
            $('#btn3').removeClass("btn-success").addClass("btn-secondary");
            $('#btn7').removeClass("btn-success").addClass("btn-secondary");
            $('#btn14').removeClass("btn-success").addClass("btn-secondary");
            $('#btn30').removeClass("btn-secondary").addClass("btn-success");
        }
    }


    // Runs to update the chart based on the users current selections
    function updateChart(dateRangeSelected, dataSelected) {

        if (dataSelected == 1) {// USD
            var dataArray = @Html.Raw(Json.Serialize(ViewBag.chartRatesUSD));
        }
        var dateArray = @Html.Raw(Json.Serialize(ViewBag.chartDates));
        var data = [];
        var dates = [];
        for (var i = 0; i < dateRangeSelected; i++) {
            data.push(parseFloat(dataArray[i]).toFixed(2));
        }


        for (var i = 0; i < dateRangeSelected; i++) {
            dates.push(dateArray[i]);
        }

        // Clear the chart html tags to get a fresh chart area
        $('#chart').empty();
        $('#chart').html('<canvas id="datachart"></canvas>');

        // Create the new chart with the data provided
        var ctx = document.getElementById("datachart").getContext('2d');
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,
                datasets: [{
                    label: 'Market',
                    data: data,
                    borderColor: [
                        'rgba(15,22,255,1)'
                    ],
                    backgroundColor: [
                        'rgba(15,22,255,0.2)'
                    ],
                    borderWidth: 1
                }]
            },
            responsive: true,

            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                }
            }
        });
    }

</script>
}
