@model Cryptofolio.Models.Asset

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var assets = ViewData["assets"] as List<String>;
}
<h2>Create</h2>

<h4>Asset</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Code" class="control-label"></label><br />
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        @foreach (var item in assets)
                        {
                            listItems.Add(new SelectListItem { Text = item, Value = item });
                        }
                    }
                    @Html.DropDownListFor(model => model.Code, listItems, "Select Asset", htmlAttributes: new { @class = "form-control", AssetType = "AssetType", @onchange = "updatePriceDisplay(value);" })
                </div>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label class="control-label">Activated</label><br />
                    <label>
                        <input asp-for="Activated" /> @Html.DisplayNameFor(model => model.Activated)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
